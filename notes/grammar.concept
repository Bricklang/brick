program ::= (statement | function_definition)*

statement ::= variable_declaration
            | expression_statement
            | function_call
            | member_access
            | array_access
            | get_statement
            | include_statement

function_definition ::= "fn" identifier "(" parameters ")" "->" type ":" block

parameters ::= (parameter ("," parameter)*)?
parameter ::= identifier "::" type

block ::= "{" (statement | function_definition)* "}"

variable_declaration ::= "val" identifier "::" type "=" expression ";"

expression_statement ::= expression ";"

expression ::= literal
             | identifier
             | binary_expression
             | unary_expression
             | function_call
             | member_access
             | array_access

literal ::= integer_literal
          | float_literal
          | string_literal

integer_literal ::= [0-9]+
float_literal ::= [0-9]+\.[0-9]+
string_literal ::= "\"" [^"]* "\""

binary_expression ::= expression operator expression
operator ::= "+" | "-" | "*" | "/" | "==" | "!=" | "<" | ">" | "<=" | ">=" | "&&" | "||"

unary_expression ::= operator expression

function_call ::= identifier "(" arguments ")"
arguments ::= (expression ("," expression)*)?

member_access ::= expression "." identifier

array_access ::= expression "[" expression "]"

identifier ::= [a-zA-Z_][a-zA-Z0-9_]*
type ::= identifier

get_statement ::= "get" "{" identifier_list "}"
identifier_list ::= identifier ("," identifier)*

include_statement ::= "include" "{" identifier_list "}"
identifier_list ::= identifier (":" identifier)*